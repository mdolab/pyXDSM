
%%% Preamble Requirements %%%
% \usepackage{geometry}
% \usepackage{amsfonts}
% \usepackage{amsmath}
% \usepackage{amssymb}
% \usepackage{tikz}

% Optional packages such as sfmath set through python interface
% \usepackage{sfmath}

% \usetikzlibrary{arrows,chains,positioning,scopes,shapes.geometric,shapes.misc,shadows}

%%% End Preamble Requirements %%%

\input{"/Users/prateekranjan/Documents/Github/pyXDSM/pyxdsm/diagram_styles"}
\begin{tikzpicture}

\matrix[MatrixSetup]{
%Row 0
\node [DataIO] (left_output_opt) {$x^*$};&
\node [Optimization] (opt) {$\text{Optimizer}$};&
\node [DataInter] (opt-solver) {$x_o$};&
&
&
&
\\
%Row 1
&
&
\node [Optimization] (solver) {$\text{TASOPT}$};&
\node [DataInter] (solver-D1) {$x_1$};&
\node [DataInter] (solver-D2) {$x_2$};&
\node [DataInter] (solver-D3) {$x_3$};&
\\
%Row 2
&
&
&
\node [MDA] (D1) {$\text{Aerodynamics}$};&
\node [DataInter] (D1-D2) {$a_1$};&
\node [DataInter] (D1-D3) {$a_2$};&
\node [DataInter] (D1-D4) {$a_3$};\\
%Row 3
&
&
&
&
\node [MDA] (D2) {$\text{Structures}$};&
\node [DataInter] (D2-D3) {$s_1$};&
\node [DataInter] (D2-D4) {$s_2$};\\
%Row 4
&
&
&
&
&
\node [MDA] (D3) {$\text{Propulsion}$};&
\node [DataInter] (D3-D4) {$p$};\\
%Row 5
&
\node [DataInter] (D4-opt) {$Fuel burn$};&
&
\node [DataInter] (D4-D1) {$T_1$};&
\node [DataInter] (D4-D2) {$T_2$};&
\node [DataInter] (D4-D3) {$T_3$};&
\node [MDA] (D4) {$\text{Trajectory}$};\\
%Row 6
&
&
&
&
&
&
\\
};

% XDSM process chains


\begin{pgfonlayer}{data}
\path
% Horizontal edges
(opt) edge [DataLine] (opt-solver)
(solver) edge [DataLine] (solver-D1)
(solver) edge [DataLine] (solver-D2)
(solver) edge [DataLine] (solver-D3)
(D1) edge [DataLine] (D1-D2)
(D1) edge [DataLine] (D1-D3)
(D1) edge [DataLine] (D1-D4)
(D3) edge [DataLine] (D3-D4)
(D2) edge [DataLine] (D2-D3)
(D2) edge [DataLine] (D2-D4)
(D4) edge [DataLine] (D4-D1)
(D4) edge [DataLine] (D4-D2)
(D4) edge [DataLine] (D4-D3)
(D4) edge [DataLine] (D4-opt)
(opt) edge [DataLine] (left_output_opt)
% Vertical edges
(opt-solver) edge [DataLine] (solver)
(solver-D1) edge [DataLine] (D1)
(solver-D2) edge [DataLine] (D2)
(solver-D3) edge [DataLine] (D3)
(D1-D2) edge [DataLine] (D2)
(D1-D3) edge [DataLine] (D3)
(D1-D4) edge [DataLine] (D4)
(D3-D4) edge [DataLine] (D4)
(D2-D3) edge [DataLine] (D3)
(D2-D4) edge [DataLine] (D4)
(D4-D1) edge [DataLine] (D1)
(D4-D2) edge [DataLine] (D2)
(D4-D3) edge [DataLine] (D3)
(D4-opt) edge [DataLine] (opt);
\end{pgfonlayer}

\end{tikzpicture}
